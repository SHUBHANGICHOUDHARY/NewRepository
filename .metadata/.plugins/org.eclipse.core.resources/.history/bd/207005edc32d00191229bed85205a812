class BankAccount
{

	private int accountNumber;
	private String holderName;
	private String holderAddress;
	private String openDate;
	private double balance;
	private double[] transactions;
	private String[] transactionsSummary;
	private int numOfTransactions;
	
	public String getAccountInfo()
	{
		return "Account number: " + accountNumber + "\nCustomer Name: " + holderName + "\nHolder's Address: " + holderAddress + "\nOpen Date: " + openDate +  "\nBalance:" + balance +"\n";
	}	
	
	public String getTransactionInfo(int n)
	{
		String transaction = transactionsSummary[n];
		if (transaction == null) 
		{
			return "No transaction exists with that number.";
		}	
		else 
		{
	
			return transaction;
		}
	}

	public BankAccount(String abc, double xyz, String address, String open)
	{
		holderName = abc;
		balance = xyz;
		holderAddress = address;
		openDate = open;
		transactions = new double[100];
		transactionsSummary = new String[100];
		transactions[0] = balance;
		transactionsSummary[0] = "A balance of : $" + Double.toString(balance) + " was deposited.";
		numOfTransactions = 0;
	}	

	public int getAccountNum()
	{
		return accountNumber;
	}

	public int getNumberOfTransactions() 
	{
		return numOfTransactions;
	}

	public void deposit(double amount)
	{

		if (amount<=0) 
		{
			System.out.println("Amount to be deposited should be more than 0");
		}
		else 
		{
			balance = balance + amount;
			numOfTransactions++;
			System.out.println("transactionsummary "+transactionsSummary[numOfTransactions]);
			System.out.println("balance  =  "+balance+ "   Deposite  =  "+ numOfTransactions);
		}	
	}

	public void withdraw(double amount)
	{
		if (amount<=0)
		{
			System.out.println("Amount to be withdrawn should be more than 0");
		}	
		else
		{
			if (balance < amount) 
			{
				System.out.println("Insufficient balance");
			}
			else 
			{
				balance = balance - amount;
				numOfTransactions++;
				System.out.println("Balance  = "+balance+ "   Credit  =  "+ numOfTransactions);
			}	
		}
	}
}



